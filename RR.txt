ROUND ROBIN (RR) PROCESS SCHEDULING


#include<stdio.h>
void main()
{
int i,NDP,sum=0,count=0,y,quant,wt=0,tat=0,at[10],bt[10],temp[10];
float avg_wt,avg_tat;
printf("Total number of process int the system: ");
scanf("%d",&NDP);
y=NDP;
for(i=0;i<NDP;i++)
{
printf("\nEnter the Arrival and Burst time of the Process[%d]\n",i+1);
printf("Arrival time is: \t");
scanf("%d",&at[i]);
printf("\nBurst time is :  \t");
scanf("%d",&bt[i]);
temp[i]=bt[i];    
}
printf("Enter the Time Quantum for the process:\t");
scanf("%d",&quant);
printf("\n Process No \t\t Burst Time \t\t TAT \t\t Waiting time ");
for(sum=0,i=0;y!=0;){
if(temp[i]<=quant&&temp[i]>0)
{
sum=sum+temp[i];
temp[i]=0;
count=1;
}
else if(temp[i]>0){
temp[i]=temp[i]-quant;
sum=sum+quant;
}
if(temp[i]==0&&count==1)
{
y--;
printf("\nProcess NO[%d] \t\t %d\t\t\t\t %d\t\t\t %d",i+1,bt[i],sum-at[i],sum-at[i]-bt[i]);
wt=wt+sum-at[i]-bt[i];
tat=tat+sum-at[i];
count=0;
}
if(i==NDP-1)
i=0;
else if(at[i+1]<=sum)
i++;
else
i=0;
}
avg_wt=wt*1.0/NDP;
avg_tat=tat*1.0/NDP;
printf("\n Average Waiting Time: \t%f",avg_wt);
printf("\n Average Waiting Time: \t%f",avg_tat);
}


Total number of process int the system: 4

Enter the Arrival and Burst time of the Process[1]
Arrival time is: 0

Burst time is :   8

Enter the Arrival and Burst time of the Process[2]
Arrival time is: 1

Burst time is :   5

Enter the Arrival and Burst time of the Process[3]
Arrival time is: 2

Burst time is :   10

Enter the Arrival and Burst time of the Process[4]
Arrival time is: 3

Burst time is :   11
Enter the Time Quantum for the process: 6
